{"version":3,"sources":["assets/bg.jpg","components/categories.js","components/cards.js","components/Restaurant_card.js","components/Restaurant_search.js","components/photos_swiper.js","components/Review_Info.js","components/Reviews.js","components/Restaurant_Info.js","components/PhotoDetails.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Categories","color","i","Math","floor","random","showCategories","this","props","categories","map","category","console","log","className","key","id","to","style","backgroundColor","getRandomColor","name","backgroundImage","require","position","fontSize","fontWeight","textShadow","Component","Cards","data","Rest_info","add","location","address","Fragment","boxShadow","featured_image","locality","user_rating","aggregate_rating","votes","cuisines","average_cost_for_two","Restaurant_Cards","c","textDecoration","cards","Restaurants","r","restaurant","Restaurant_search","myRef","React","createRef","state","restaurants","prevProps","match","params","renderRestaurant","window","addEventListener","stickySideBar","removeEventListener","sidebar","document","querySelector","scrollTop","documentElement","clientHeight","innerHeight","classList","contains","remove","latitude","longitude","category_id","navigator","geolocation","getCurrentPosition","coords","fetch","method","headers","then","res","json","setState","Photos_swiper","Photos","photo","p","res_id","url","display","slidesPerView","setWrapperSize","spaceBetween","autoplay","delay","breakpoints","1024","767","320","navigation","nextEl","prevEl","Review_Info","review","fontFamily","float","href","user","profile_url","profile_image","class","rating_color","rating_text","review_text","Reviews","showReview","reviews","Restaurant_Info","Rest_Details","undefined","info","role","justifyContent","marginTop","photos","all_reviews","PhotoDetails","App","length","exact","path","render","component","Boolean","hostname","ReactDOM","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cc50fc0b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.48f72a44.jpg\";","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nexport default class Categories extends Component {\n\n  getRandomColor() {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n  render() {\n    let showCategories = this.props.categories.map(category => {\n      console.log(category);\n      return (\n        <div className=\"col-3 mb-3\" key={category.categories.id}>\n          <Link to={`/category_id/${category.categories.id}`} className=\" text-decoration-none\">\n            <div className=\"card category_card text-light\" style={{ backgroundColor: this.getRandomColor() }}>\n              <div className=\"card-body categoryBody\">{category.categories.name}</div>\n            </div>\n          </Link>\n        </div>\n      )\n    })\n    return (\n      <div className=\"container-fluid category_bg\"\n        style={{ backgroundImage: `url(${require('../assets/bg.jpg')})` }}>\n        <div className=\"container\" style={{ position: 'relative' }}>\n          <h1 style={{ fontSize: '100px', color: 'white', fontWeight: 'bold', textShadow: '0px 4px #222' }}>Choose Category</h1>\n          <div className=\"row category_top\">\n            {showCategories}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import React, {\n  Component\n} from 'react';\n\nexport default class Cards extends Component {\n  render() {\n    let data = this.props.Rest_info;\n    let add = data.location.address;\n    return (\n      <React.Fragment>\n        <div className=\"card rest_card h-100\" style={{ boxShadow: '0px 0px 7px #ccc' }}>\n          <div className=\"card-body\">\n            <div className=\"row\">\n              <div className=\"col-sm-4 pb-2\">\n                <div className=\"rest_bg img-fluid\"\n                  style={{ backgroundImage: `url(${data.featured_image})` }}>\n                </div>\n              </div>\n              <div className=\"col-sm-6\">\n\n                <h3 className=\"rest_name\">{data.name}</h3>\n\n                <h5>{data.location.locality}</h5>\n                <h6 className=\"rest_add\">\n                  {add}\n                  {/* {add.length > 50 ? `${add.substring(0, 50)}...` : add} */}\n                </h6>\n\n              </div>\n              <div className=\"col-sm-2\">\n                <span className=\"badge badge-success p-2\">{data.user_rating.aggregate_rating}</span>\n                <p className=\"\" style={{ color: 'grey' }}> {data.user_rating.votes} votes</p>\n              </div>\n            </div>\n            <hr></hr>\n            <div className=\"row\">\n              <div className=\"col-3\">\n                <p>CUISINES:</p>\n                <p className=\"m-0\">COST FOR TWO:</p>\n              </div>\n              <div className=\"col-9\">\n                <p>{data.cuisines}</p>\n                <p className=\"m-0\">{data.average_cost_for_two}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment >\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n// import Search from './search_box';\nimport Cards from './cards';\n\nexport default class Restaurant_Cards extends Component {\n\n  componentDidMount() {\n    console.log(this.props.categories);\n  }\n  render() {\n    let category = this.props.categories.map(c => {\n      return (\n        <li className=\"list-group-item\">\n          <Link style={{ textDecoration: 'none' }} to={`/category_id/${c.categories.id}`}>\n            {c.categories.name}\n          </Link>\n        </li >\n      )\n    })\n\n    let cards = this.props.Restaurants.map(r => {\n      return (\n        <div className=\"col-12 mb-3\" key={r.restaurant.id}>\n          <Link to={`/info/${r.restaurant.id}`} style={{ textDecoration: 'none' }}>\n            <Cards Rest_info={r.restaurant} />\n          </Link>\n        </div>\n      )\n    });\n    return (\n      <div>\n        {/* <Search /> */}\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-8\">\n              <div className=\"row\">\n                {cards}\n              </div>\n            </div>\n            <div className=\"col-4\" id=\"sideBar\" >\n              <div className=\"row\">\n                <ul className=\"list-group w-100\">\n                  {category}\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import React, {\n  Component\n} from 'react';\n\nimport Restaurant_Cards from './Restaurant_card';\n\nexport default class Restaurant_search extends Component {\n\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n    this.state = {\n      restaurants: []\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params.id != prevProps.match.params.id) {\n      this.renderRestaurant(this.props.match.params.id);\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.stickySideBar);\n    window.addEventListener(\"resize\", this.stickySideBar);\n    this.stickySideBar();\n    this.renderRestaurant(this.props.match.params.id);\n    console.log(this.props);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.stickySideBar);\n    window.removeEventListener(\"resize\", this.stickySideBar);\n  }\n  stickySideBar() {\n    const sidebar = document.querySelector(\"#sideBar\");\n    if (!sidebar) return;\n    var scrollTop = document.documentElement.scrollTop;\n    console.log(document.documentElement.scrollTop)\n    if (scrollTop > sidebar.querySelector('.list-group').clientHeight || sidebar.querySelector('.list-group').clientHeight < window.innerHeight) {\n      sidebar.querySelector('.list-group').classList.add('sticky')\n      sidebar.querySelector('.list-group').classList.add('col-4')\n    }\n    else {\n      // debugger;\n      sidebar.querySelector('.list-group').classList.contains('sticky')\n        && sidebar.querySelector('.list-group').classList.remove('sticky');\n      // sidebar.querySelector('.list-group').classList.contains('col-4')\n      //   && sidebar.querySelector('.list-group').classList.remove('col-4');\n    }\n    console.log(scrollTop);\n  }\n\n  renderRestaurant(id) {\n    let latitude, longitude;\n    let category_id = id;\n    navigator.geolocation.getCurrentPosition((location) => {\n      latitude = location.coords.latitude;\n      longitude = location.coords.longitude;\n\n      fetch(`https://developers.zomato.com/api/v2.1/search?lat=${latitude}&lon=${longitude}&category=${category_id}`, {\n        method: 'GET',\n        headers: {\n          'content-type': 'application/json',\n          \"user-key\": \"b8c8a604c4a73be163244511e3f70235\"\n        }\n      })\n        .then(res => res.json())\n        .then(data => {\n          this.setState({\n            restaurants: data.restaurants\n          })\n        })\n    });\n\n  }\n  render() {\n    return (\n      <div className=\"pt-3 pb-3\">\n        <Restaurant_Cards Restaurants={this.state.restaurants} categories={this.props.categories} />\n      </div>\n    );\n  }\n}","import React, {\n  Component\n} from 'react';\nimport Swiper from 'react-id-swiper';\nimport { Link } from 'react-router-dom';\n\nexport default class Photos_swiper extends Component {\n  componentDidMount() {\n    console.log(this.props.Photos)\n  }\n  render() {\n    const params = {\n      slidesPerView: 5,\n      setWrapperSize: true,\n      spaceBetween: 10,\n      autoplay: {\n        delay: 2000,\n      },\n      breakpoints: {\n        1024: {\n          slidesPerView: 5\n        },\n        767: {\n          slidesPerView: 2\n        },\n        320: {\n          slidesPerView: 1\n        }\n      },\n      navigation: {\n        nextEl: '.swiper-button-next',\n        prevEl: '.swiper-button-prev'\n      },\n    }\n    let data = this.props.Photos;\n    if (data == null) return null\n    let photo = data.map(p => {\n      return (\n        <div className=\"card swiperCard\" key={p.photo.res_id}\n          style={{ backgroundImage: `url(${p.photo.url})` }}>\n\n          <Link to={`/photo/${p.photo.res_id}`} style={{ display: 'block' }}>\n          </Link>\n        </div>\n      )\n    })\n\n    return (\n      <div className=\"container mt-3 mb-3\" >\n        <div className=\"row\">\n          <Swiper {...params}>\n            {photo}\n          </Swiper>\n        </div>\n      </div>\n    );\n  }\n}","import React, {\n  Component\n} from 'react';\n\nexport default class Review_Info extends Component {\n  componentDidMount() {\n    console.log(this.props.review);\n  }\n  render() {\n    let data = this.props.review;\n    return (\n      <div className=\"row\" style={{ fontFamily: 'times new roman' }}>\n        <div className=\"card usercard\">\n          <div className=\"row\">\n            <div className=\"col col-sm-2\" style={{ float: 'right' }}>\n              <a href={`${data.user.profile_url}`}>\n                <div className=\"userImg\" style={{ backgroundImage: `url(${data.user.profile_image})` }}></div>\n              </a>\n\n            </div>\n            <div className=\"col col-sm-10 text-left\">\n              <h3 className=\"\" style={{ color: 'grey' }}>{data.user.name}</h3>\n              <span class=\"badge\" style={{ backgroundColor: `#${data.rating_color}`, color: 'white', fontSize: '22px' }}>{data.rating_text}</span>\n              <p>{data.review_text}</p>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport Review_Info from './Review_Info';\n\nexport default class Reviews extends Component {\n\n  render() {\n    let showReview = this.props.reviews.map(r => {\n      console.log(r);\n      return <Review_Info review={r.review} />\n    })\n    return (\n      <div className=\"card review_card\">\n        <h3>Reviews</h3>\n        <div className=\"card-body\">\n          {showReview}\n        </div>\n      </div>\n    );\n  }\n}","import React, {\n  Component\n} from 'react';\nimport Photos_Swiper from './photos_swiper';\nimport Reviews from './Reviews';\n\n\nexport default class Restaurant_Info extends Component {\n\n  state = {\n    Rest_Details: undefined\n  }\n\n  componentDidMount() {\n    let res_id = this.props.match.params.id;\n    fetch(\"https://developers.zomato.com/api/v2.1/restaurant?res_id=\" + res_id, {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        \"user-key\": \"b8c8a604c4a73be163244511e3f70235\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        this.setState({\n          Rest_Details: data\n        })\n      })\n  }\n  render() {\n    let info = this.state.Rest_Details;\n    if (info == null)\n      return <div className=\"spinner-border text-danger\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    return (\n      <div className=\"pt-3 container-fluid InfoBg\"\n        style={{ backgroundImage: `url(${info.featured_image})` }}>\n\n        <div className=\"card info_card\">\n          <div className=\"card-body\">\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <h2 className=\"card-title\" style={{ color: 'red' }}>{info.name}</h2>\n\n              <span className=\"badge badge-success\">{info.user_rating.aggregate_rating}</span>\n            </div>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <h5 style={{ fontFamily: 'Times new roman' }}>{info.location.locality}</h5>\n              <p className=\"\" style={{ color: 'grey', fontSize: '14px', marginTop: '-2px' }}> {info.user_rating.votes} votes</p>\n            </div>\n            <h6 style={{ fontFamily: 'Times new roman' }} className=\"rest_add\">\n              {info.location.address}\n            </h6>\n          </div>\n        </div>\n        <Photos_Swiper Photos={info.photos} />\n        <Reviews reviews={info.all_reviews.reviews} />\n      </div>\n    );\n  }\n}","import React, {\n  Component\n} from 'react';\n\nexport default class PhotoDetails extends Component {\n  render() {\n    return (\n      <div>djfvb</div>\n    );\n  }\n}","import React from 'react';\nimport './App.css';\nimport Categories from './components/categories';\nimport { BrowserRouter, Switch, Route, Link as Router } from \"react-router-dom\";\nimport Restaurant_search from './components/Restaurant_search';\nimport Restaurant_Info from './components/Restaurant_Info';\nimport PhotoDetails from './components/PhotoDetails';\n\nclass App extends React.Component {\n\n  state = {\n    categories: []\n  }\n\n  componentDidMount() {\n    fetch(\"https://developers.zomato.com/api/v2.1/categories\", {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        \"user-key\": \"b8c8a604c4a73be163244511e3f70235\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        this.setState({\n          categories: data.categories\n        })\n      })\n  }\n  render() {\n    if (this.state.categories.length < 1) return <h1>Loading....</h1>\n    return (\n      <BrowserRouter>\n        <div className=\"App mainBg\" style={{ backgroundColor: '#F6F6F6' }}\n        // style={{ backgroundImage: `url(${require('./assets/bg.jpg')})` }} \n        >\n          <Switch>\n\n            <Route exact path=\"/\" render={() => <Categories categories={this.state.categories} />}></Route>\n            <Route exact path=\"/category_id/:id\"\n              render={(props) => <Restaurant_search categories={this.state.categories} {...props} />}></Route>\n            <Route path=\"/info/:id\" component={Restaurant_Info}></Route>\n            <Route path=\"/photo/:id\" component={PhotoDetails}></Route>\n          </Switch>\n        </div>\n      </BrowserRouter >\n    );\n  }\n\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}